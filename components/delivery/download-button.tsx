'use client'
import { Button } from '@/components/ui/button'
import { Download } from 'lucide-react'

interface DownloadButtonProps {
  data: any
  filename?: string
  format?: 'json' | 'txt'
}

export function DownloadButton({ data, filename = 'horoscope', format = 'json' }: DownloadButtonProps) {
  const formatAsText = (d: any): string => {
    const lines = [
      '='.repeat(50),
      'HOROSCOPE REPORT',
      '='.repeat(50),
      '',
      `Name: ${d.name || 'N/A'}`,
      `Birth Date: ${d.birthDate ? new Date(d.birthDate).toLocaleDateString() : 'N/A'}`,
      `Birth Place: ${d.birthPlace || 'N/A'}`,
      `Birth Time: ${d.birthTime || 'N/A'}`,
      '',
      '='.repeat(50),
      'PREDICTIONS',
      '='.repeat(50),
      ''
    ]
    if (d.predictions?.length) {
      d.predictions.forEach((p: any, i: number) => {
        lines.push(`${i + 1}. ${p.title || 'Prediction'}`)
        lines.push(`   ${p.text || p.description || ''}`)
        lines.push('')
      })
    }
    lines.push('='.repeat(50), 'Generated by AstroKalki', 'https://www.astrokalki.com', '='.repeat(50))
    return lines.join('\n')
  }

  const downloadData = () => {
    const content = format === 'json' ? JSON.stringify(data, null, 2) : formatAsText(data)
    const blob = new Blob([content], { type: format === 'json' ? 'application/json' : 'text/plain' })
    const url = window.URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${filename}-${new Date().toISOString().split('T')[0]}.${format}`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    window.URL.revokeObjectURL(url)
  }

  return (
    <Button onClick={downloadData} variant="outline" className="gap-2">
      <Download className="h-4 w-4" />
      Download {format.toUpperCase()}
    </Button>
  )
}
